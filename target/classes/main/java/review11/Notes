Collections Framework:
- Collections Framework is a set of classes and interfaces in java that
  we use to store large amounts of data easily. There are many classes
  containing many useful methods to manipulate the data.
  These Data Structures are dynamic.

Why we should be learning CF?
- Not fixed in size like arrays
- They have ready made methods which we can just use.

Downsides:
- They are slower than arrays
- As they only work with non-primitives they occupy more memory.

Wrapper Classes:
- Objects that allow us to work with primitive data types in collections.
- For every primitive dataType java developers created a Class so that we
  can store the primitive data in CF. They also have a way of converting a
  primitive to an equivalent wrapper its called boxing and when we do the
  reverse its called unboxing.

Lists - maintains insertion order and they can store duplicates as well.

Some of the main classes in CF:
- ArrayList implements list
- LinkedList implements list
===============================================================================
remove() => only removes ONE element
removeIf() => removes ALL of the elements which meets the condition.
removeAll => removes a complete list of elements
get() => retrieves the certain element with index
set() => replaces only ONE element
replaceAll => ALL the elements which meets a specific condition will be replaced

Sets - they don't allow duplicate data
- HashSet
Advantage - Fastest
Disadvantage - Insertion order is not maintained

- LinkedHashSet
Advantage - Maintains the insertion order
Disadvantage - Its a little slow as compared to the HashSet

- TreeSet
Advantage - Keeps the data sorted, searching is fastest.
Disadvantage - insertion speed is super slow.
