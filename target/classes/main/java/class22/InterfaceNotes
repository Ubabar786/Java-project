Interface:
- Interface are like contracts, in which we define abstract methods
  which the classes have to implement. They can also have public,
  static, final variables.
Why should we learn about interfaces?
1) Specially designed for abstraction.
2) Light wight as compared to abstract classes.
3) We can achieve multiple inheritance in interfaces.
4) There is no diamond problem when having multiple inheritance.
5) Helps us build things in a modular way, which can be used with
   classes even if they are not closely related.
Rules:
1) Interfaces don't have instance methods but can have static methods.
2) No instance fields are allowed, all fields inside an interface are
   public static final.
3) No constructors are allowed.
4) You can't create Objects as there are no constructors.
5) You can't have final keyword with interface or method as they are by
default abstract.
6) We can have multiple inheritance as there is no Diamond problem.
7) We use 'implements' keyword when we want to implement an interface.
